/*
//
//              INTEL CORPORATION PROPRIETARY INFORMATION
//  This software is supplied under the terms of a license  agreement or
//  nondisclosure agreement with Intel Corporation and may not be copied
//  or disclosed except in  accordance  with the terms of that agreement.
//        Copyright (c) 2003-2012 Intel Corporation. All Rights Reserved.
//
//
*/
#include "umc_config.h"
#if defined (UMC_ENABLE_H264_VIDEO_DECODER)

#include "umc_h264_dec_init_tables_cavlc.h"


namespace UMC
{

#if 0
// Table 9-10 - Tables for run_before
// zerosLeft = 1
/*
0 1
1 0
*/

const Ipp32s run_before_map_1[] =
{
1, /* max bits */
1,  /* total subtables */
1,/* subtable sizes */

2, /* 1-bit codes */
0x0001, 0, 0x0000, 1,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft = 2
/*
0    1

1    01
2    00
*/

const Ipp32s run_before_map_2[] =
{
2, /* max bits */
1,  /* total subtables */
2,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 0,

2, /* 2-bit codes */
0x0001, 1, 0x0000, 2,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft = 3
/*
3    00
2    01
1    10
0    11
*/

const Ipp32s run_before_map_3[] =
{
2, /* max bits */
1,  /* total subtables */
2,/* subtable sizes */

0, /* 1-bit codes */

4, /* 2-bit codes */
0x0000, 3, 0x0001, 2, 0x0002, 1, 0x0003, 0,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft = 4
/*
2    01
1    10
0    11

4    000
3    001
*/

const Ipp32s run_before_map_4[] =
{
3, /* max bits */
1,  /* total subtables */
3,/* subtable sizes */

0, /* 1-bit codes */

3, /* 2-bit codes */
0x0001, 2, 0x0002, 1, 0x0003, 0,

2, /* 3-bit codes */
0x0000, 4, 0x0001, 3,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft = 5
/*
1    10
0    11

5    000
4    001
3    010
2    011
*/

const Ipp32s run_before_map_5[] =
{
3, /* max bits */
1,  /* total subtables */
3,/* subtable sizes */

0, /* 1-bit codes */

2, /* 2-bit codes */
0x0002, 1, 0x0003, 0,

4, /* 3-bit codes */
0x0000, 5, 0x0001, 4, 0x0002, 3, 0x0003, 2,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft = 6
/*
0    11

1    000
2    001
4    010
3    011
6    100
5    101

*/

const Ipp32s run_before_map_6[] =
{
3, /* max bits */
1,  /* total subtables */
3,/* subtable sizes */

0, /* 1-bit codes */

1, /* 2-bit codes */
0x0003, 0,

6, /* 3-bit codes */
0x0000, 1, 0x0001, 2, 0x0002, 4, 0x0003, 3,
0x0004, 6, 0x0005, 5,

-1
};

// Table 9-10 - Tables for run_before
// zerosLeft > 6
/*
6    001
5    010
4    011
3    100
2    101
1    110
0    111

7    0001

8    0000 1

9    0000 01

10    0000 001

11    0000 0001

12    0000 0000 1

13    0000 0000 01

14    0000 0000 001

*/

const Ipp32s run_before_map_6p[] =
{
11, /* max bits */
1,  /* total subtables */
11,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

7, /* 3-bit codes */
0x0001, 6, 0x0002, 5, 0x0003, 4, 0x0004, 3,
0x0005, 2, 0x0006, 1, 0x0007, 0,

1, /* 4-bit codes */
0x0001, 7,

1, /* 5-bit codes */
0x0001, 8,

1, /* 6-bit codes */
0x0001, 9,

1, /* 7-bit codes */
0x0001, 10,

1, /* 8-bit codes */
0x0001, 11,

1, /* 9-bit codes */
0x0001, 12,

1, /* 10-bit codes */
0x0001, 13,

1, /* 11-bit codes */
0x0001, 14,

-1
};



//Table 9 5 - coeff_token mapping to TotalCoeff( coeff_token )
// and TrailingOnes( coeff_token ), 0  <=  nC  <  2, sorted by code len

/*
0    0    1

1    1    01

2    2    001

3    3    0001 1

3    4    0000 11
1    2    0001 00
0    1    0001 01

3    5    0000 100
2    3    0000 101

3    6    0000 0100
2    4    0000 0101
1    3    0000 0110
0    2    0000 0111

3    7    0000 0010 0
2    5    0000 0010 1
1    4    0000 0011 0
0    3    0000 0011 1

3    8    0000 0001 00
2    6    0000 0001 01
1    5    0000 0001 10
0    4    0000 0001 11

3    9    0000 0000 100
2    7    0000 0000 101
1    6    0000 0000 110
0    5    0000 0000 111

0    8    0000 0000 0100 0
2    9    0000 0000 0100 1
1    8    0000 0000 0101 0
0    7    0000 0000 0101 1
3    10    0000 0000 0110 0
2    8    0000 0000 0110 1
1    7    0000 0000 0111 0
0    6    0000 0000 0111 1

3    12    0000 0000 0010 00
2    11    0000 0000 0010 01
1    10    0000 0000 0010 10
0    10    0000 0000 0010 11
3    11    0000 0000 0011 00
2    10    0000 0000 0011 01
1    9    0000 0000 0011 10
0    9    0000 0000 0011 11

1    13    0000 0000 0000 001
3    14    0000 0000 0001 000
2    13    0000 0000 0001 001
1    12    0000 0000 0001 010
0    12    0000 0000 0001 011
3    13    0000 0000 0001 100
2    12    0000 0000 0001 101
1    11    0000 0000 0001 110
0    11    0000 0000 0001 111

0    16    0000 0000 0000 0100
2    16    0000 0000 0000 0101
1    16    0000 0000 0000 0110
0    15    0000 0000 0000 0111
3    16    0000 0000 0000 1000
2    15    0000 0000 0000 1001
1    15    0000 0000 0000 1010
0    14    0000 0000 0000 1011
3    15    0000 0000 0000 1100
2    14    0000 0000 0000 1101
1    14    0000 0000 0000 1110
0    13    0000 0000 0000 1111

*/

const
Ipp32s coeff_token_map_02[] =
{
16, /* max bits */
4,  /* total subtables */
3,3,3,7,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 0, 0,

1, /* 2-bit codes */
0x0001, 1, 1,

1, /* 3-bit codes */
0x0001, 2, 2,

0, /* 4-bit codes */

1, /* 5-bit codes */
0x0003, 3, 3,

3, /* 6-bit codes */
0x0003, 3, 4, 0x0004, 1, 2, 0x0005, 0, 1,

2, /* 7-bit codes */
0x0004, 3, 5, 0x0005, 2, 3,

4, /* 8-bit codes */
0x0004, 3, 6, 0x0005, 2, 4, 0x0006, 1, 3, 0x0007, 0, 2,

4, /* 9-bit codes */
0x0004, 3, 7, 0x0005, 2, 5, 0x0006, 1, 4, 0x0007, 0, 3,

4, /* 10-bit codes */
0x0004, 3, 8, 0x0005, 2, 6, 0x0006, 1, 5, 0x0007, 0, 4,

4, /* 11-bit codes */
0x0004, 3, 9, 0x0005, 2, 7, 0x0006, 1, 6, 0x0007, 0, 5,

0, /* 12-bit codes */

8, /* 13-bit codes */
0x0008, 0, 8, 0x0009, 2, 9, 0x000a, 1, 8, 0x000b, 0, 7,
0x000c, 3, 10,0x000d, 2, 8, 0x000e, 1, 7, 0x000f, 0, 6,

8, /* 14-bit codes */
0x0008, 3, 12, 0x0009, 2, 11, 0x000a, 1, 10, 0x000b, 0, 10,
0x000c, 3, 11, 0x000d, 2, 10, 0x000e, 1, 9, 0x000f, 0, 9,

9, /* 15-bit codes */
0x0001, 1, 13, 0x0008, 3, 14, 0x0009, 2, 13, 0x000a, 1, 12,
0x000b, 0, 12, 0x000c, 3, 13, 0x000d, 2, 12, 0x000e, 1, 11,
0x000f, 0, 11,

12, /* 16-bit codes */
0x0004, 0, 16, 0x0005, 2, 16, 0x0006, 1, 16, 0x0007, 0, 15,
0x0008, 3, 16, 0x0009, 2, 15, 0x000a, 1, 15, 0x000b, 0, 14,
0x000c, 3, 15, 0x000d, 2, 14, 0x000e, 1, 14, 0x000f, 0, 13,

-1
};
/*
#undef OFF
#define OFF 120//60//

#undef SZCF
#define SZCF 4//2//

#undef SHIFT1
#define SHIFT1 16//11//

#undef SHIFT2
#define SHIFT2 8//5//

#undef TABLE_TYPE
#define TABLE_TYPE Ipp32s //Ipp16u
*/

//Table 9 5 - coeff_token mapping to TotalCoeff( coeff_token )
// and TrailingOnes( coeff_token ), 2  <=  nC  <  4, sorted by code len
/*
1    1    10
0    0    11

2    2    011

3    4    0100
3    3    0101

3    5    0011 0
1    2    0011 1

3    7    0001 00
2    4    0001 01
1    4    0001 10
0    2    0001 11
3    6    0010 00
2    3    0010 01
1    3    0010 10
0    1    0010 11

3    8    0000 100
2    5    0000 101
1    5    0000 110
0    3    0000 111

0    5    0000 0100
2    6    0000 0101
1    6    0000 0110
0    4    0000 0111

3    9    0000 0010 0
2    7    0000 0010 1
1    7    0000 0011 0
0    6    0000 0011 1

3    11    0000 0001 000
2    9    0000 0001 001
1    9    0000 0001 010
0    8    0000 0001 011
3    10    0000 0001 100
2    8    0000 0001 101
1    8    0000 0001 110
0    7    0000 0001 111

0    11    0000 0000 1000
2    11    0000 0000 1001
1    11    0000 0000 1010
0    10    0000 0000 1011
3    12    0000 0000 1100
2    10    0000 0000 1101
1    10    0000 0000 1110
0    9    0000 0000 1111

3    15    0000 0000 0000 1
2    14    0000 0000 0011 0
0    14    0000 0000 0011 1
3    14    0000 0000 0100 0
2    13    0000 0000 0100 1
1    13    0000 0000 0101 0
0    13    0000 0000 0101 1
3    13    0000 0000 0110 0
2    12    0000 0000 0110 1
1    12    0000 0000 0111 0
0    12    0000 0000 0111 1

3    16    0000 0000 0001 00
2    16    0000 0000 0001 01
1    16    0000 0000 0001 10
0    16    0000 0000 0001 11
1    15    0000 0000 0010 00
0    15    0000 0000 0010 01
2    15    0000 0000 0010 10
1    14    0000 0000 0010 11
*/

const
Ipp32s coeff_token_map_24[] =
{

14, /* max bits */
3,  /* total subtables */
3,4,7,/* subtable sizes */

0, /* 1-bit codes */

2, /* 2-bit codes */
0x0002, 1, 1, 0x0003, 0, 0,

1, /* 3-bit codes */
0x0003, 2, 2,

2, /* 4-bit codes */
0x0004, 3, 4, 0x0005, 3, 3,

2, /* 5-bit codes */
0x0006, 3, 5, 0x0007, 1, 2,

8, /* 6-bit codes */
0x0004, 3, 7, 0x0005, 2, 4, 0x0006, 1, 4, 0x0007, 0, 2,
0x0008, 3, 6, 0x0009, 2, 3, 0x000a, 1, 3, 0x000b, 0, 1,

4, /* 7-bit codes */
0x0004, 3, 8, 0x0005, 2, 5, 0x0006, 1, 5, 0x0007, 0, 3,

4, /* 8-bit codes */
0x0004, 0, 5, 0x0005, 2, 6, 0x0006, 1, 6, 0x0007, 0, 4,

4, /* 9-bit codes */
0x0004, 3, 9, 0x0005, 2, 7, 0x0006, 1, 7, 0x0007, 0, 6,

0, /* 10-bit codes */

8, /* 11-bit codes */
0x0008, 3, 11, 0x0009, 2, 9, 0x000a, 1, 9,  0x000b, 0, 8,
0x000c, 3, 10, 0x000d, 2, 8, 0x000e, 1, 8,  0x000f, 0, 7,

8, /* 12-bit codes */
0x0008, 0, 11, 0x0009, 2, 11, 0x000a, 1, 11, 0x000b, 0, 10,
0x000c, 3, 12, 0x000d, 2, 10, 0x000e, 1, 10, 0x000f, 0, 9,

11, /* 13-bit codes */
0x0001, 3, 15, 0x0006, 2, 14, 0x0007, 0, 14, 0x0008, 3, 14,
0x0009, 2, 13, 0x000a, 1, 13, 0x000b, 0, 13, 0x000c, 3, 13,
0x000d, 2, 12, 0x000e, 1, 12, 0x000f, 0, 12,

8, /* 14-bit codes */
0x0004, 3, 16, 0x0005, 2, 16, 0x0006, 1, 16, 0x0007, 0, 16,
0x0008, 1, 15, 0x0009, 0, 15, 0x000a, 2, 15, 0x000b, 1, 14,

-1
};

//Table 9 5 - coeff_token mapping to TotalCoeff( coeff_token )
// and TrailingOnes( coeff_token ), 4  <=  nC  <  8, sorted by code len
/*
3    7    1000
3    6    1001
3    5    1010
3    4    1011
3    3    1100
2    2    1101
1    1    1110
0    0    1111

1    5    0100 0
2    5    0100 1
1    4    0101 0
2    4    0101 1
1    3    0110 0
3    8    0110 1
2    3    0111 0
1    2    0111 1

0    3    0010 00
2    7    0010 01
1    7    0010 10
0    2    0010 11
3    9    0011 00
2    6    0011 01
1    6    0011 10
0    1    0011 11

0    7    0001 000
0    6    0001 001
2    9    0001 010
0    5    0001 011
3    10    0001 100
2    8    0001 101
1    8    0001 110
0    4    0001 111

3    12    0000 1000
2    11    0000 1001
1    10    0000 1010
0    9    0000 1011
3    11    0000 1100
2    10    0000 1101
1    9    0000 1110
0    8    0000 1111

1    13    0000 0011 1
0    12    0000 0100 0
2    13    0000 0100 1
1    12    0000 0101 0
0    11    0000 0101 1
3    13    0000 0110 0
2    12    0000 0110 1
1    11    0000 0111 0
0    10    0000 0111 1

0    16    0000 0000 01
3    16    0000 0000 10
2    16    0000 0000 11
1    16    0000 0001 00
0    15    0000 0001 01
3    15    0000 0001 10
2    15    0000 0001 11
1    15    0000 0010 00
0    14    0000 0010 01
3    14    0000 0010 10
2    14    0000 0010 11
1    14    0000 0011 00
0    13    0000 0011 01
*/

const
Ipp32s coeff_token_map_48[] =
{

10, /* max bits */
3,  /* total subtables */
4,3,3,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */
0, /* 3-bit codes */
8, /* 4-bit codes */
0x0008, 3, 7, 0x0009, 3, 6, 0x000a, 3, 5, 0x000b, 3, 4,
0x000c, 3, 3, 0x000d, 2, 2, 0x000e, 1, 1, 0x000f, 0, 0,

8, /* 5-bit codes */
0x0008, 1, 5, 0x0009, 2, 5, 0x000a, 1, 4, 0x000b, 2, 4,
0x000c, 1, 3, 0x000d, 3, 8, 0x000e, 2, 3, 0x000f, 1, 2,

8, /* 6-bit codes */
0x0008, 0, 3, 0x0009, 2, 7, 0x000a, 1, 7, 0x000b, 0, 2,
0x000c, 3, 9, 0x000d, 2, 6, 0x000e, 1, 6, 0x000f, 0, 1,

8, /* 7-bit codes */
0x0008, 0, 7, 0x0009, 0, 6, 0x000a, 2, 9, 0x000b, 0, 5,
0x000c, 3, 10,0x000d, 2, 8, 0x000e, 1, 8, 0x000f, 0, 4,

8, /* 8-bit codes */
0x0008, 3, 12, 0x0009, 2, 11, 0x000a, 1, 10, 0x000b, 0, 9,
0x000c, 3, 11, 0x000d, 2, 10, 0x000e, 1, 9,  0x000f, 0, 8,

9, /* 9-bit codes */
0x0007, 1, 13, 0x0008, 0, 12, 0x0009, 2, 13, 0x000a, 1, 12,
0x000b, 0, 11, 0x000c, 3, 13, 0x000d, 2, 12, 0x000e, 1, 11,
0x000f, 0, 10,

13, /* 10-bit codes */
0x0001, 0, 16, 0x0002, 3, 16, 0x0003, 2, 16, 0x0004, 1, 16,
0x0005, 0, 15, 0x0006, 3, 15, 0x0007, 2, 15, 0x0008, 1, 15,
0x0009, 0, 14, 0x000a, 3, 14, 0x000b, 2, 14, 0x000c, 1, 14,
0x000d, 0, 13,

-1
};

//Table 9 5 - coeff_token mapping to TotalCoeff( coeff_token )
// and TrailingOnes( coeff_token ),  nC  = -1, sorted by code len
/*
1    1    1

0    0    01

2    2    001

0    4    0000 10
0    3    0000 11
0    2    0001 00
3    3    0001 01
1    2    0001 10
0    1    0001 11

3    4    0000 000
2    3    0000 010
1    3    0000 011

2    4    0000 0010
1    4    0000 0011
*/

const
Ipp32s coeff_token_map_cr[] =
{

8, /* max bits */
2,  /* total subtables */
6,2,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 1, 1,

1, /* 2-bit codes */
0x0001, 0, 0,

1, /* 3-bit codes */
0x0001, 2, 2,

0, /* 4-bit codes */
0, /* 5-bit codes */

6, /* 6-bit codes */
0x0002, 0, 4, 0x0003, 0, 3, 0x0004, 0, 2, 0x0005, 3, 3,
0x0006, 1, 2, 0x0007, 0, 1,

3, /* 7-bit codes */
0x0000, 3, 4, 0x0002, 2, 3, 0x0003, 1, 3,

2, /* 8-bit codes */
0x0002, 2, 4, 0x0003, 1, 4,

-1
};

const
Ipp32s coeff_token_map_cr2[] =
{
    13, /* max bits */
    2,  /* total subtables */
    7,6,/* subtable sizes */

    1, /* 1-bit codes */
    0x0001, 0, 0,

    1, /* 2-bit codes */
    0x0001, 1, 1,

    1, /* 3-bit codes */
    0x0001, 2, 2,

    0, /* 4-bit codes */
    1, /* 5-bit codes */
    0x0001, 3, 3,

    1, /* 6-bit codes */
    0x0001, 3, 4,

    8, /* 7-bit codes */
    0x0008, 3, 6, 0x0009, 3, 5, 0x000A, 2, 4,
    0x000B, 2, 3, 0x000C, 1, 3, 0x000D, 1, 2,
    0x000E, 0, 2, 0x000F, 0, 1,

    0, /* 8-bit codes */
    4, /* 9-bit codes */
    0x0004, 2, 5, 0x0005, 1, 4, 0x0006, 0, 4,
    0x0007, 0, 3,
    4, /* 10-bit codes */
    0x0004, 3, 7, 0x0005, 2, 6, 0x0006, 1, 5,
    0x0007, 0, 5,
    4, /* 11-bit codes */
    0x0004, 3, 8, 0x0005, 2, 7, 0x0006, 1, 6,
    0x0007, 0, 6,
    4, /* 12-bit codes */
    0x0004, 2, 8, 0x0005, 1, 8, 0x0006, 1, 7,
    0x0007, 0, 7,
    1, /* 13-bit codes */
    0x0007, 0, 8,

    -1
};


//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 1
/*
0    1

2    010
1    011

4    0010
3    0011

6    0001 0
5    0001 1

8    0000 10
7    0000 11

10    0000 010
9    0000 011

12    0000 0010
11    0000 0011

15    0000 0000 1
14    0000 0001 0
13    0000 0001 1
*/

const
Ipp32s total_zeros_map_1[] =
{
9, /* max bits */
1,  /* total subtables */
9,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 0,

0, /* 2-bit codes */

2, /* 3-bit codes */
0x0002, 2, 0x0003, 1,

2, /* 4-bit codes */
0x0002, 4, 0x0003, 3,

2, /* 5-bit codes */
0x0002, 6, 0x0003, 5,

2, /* 6-bit codes */
0x0002, 8, 0x0003, 7,

2, /* 7-bit codes */
0x0002, 10, 0x0003, 9,

2, /* 8-bit codes */
0x0002, 12, 0x0003, 11,

3, /* 9-bit codes */
0x0001, 15, 0x0002, 14, 0x0003, 13,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 2

/*
4    011
3    100
2    101
1    110
0    111

8    0010
7    0011
6    0100
5    0101

10    0001 0
9    0001 1

14    0000 00
13    0000 01
12    0000 10
11    0000 11
*/

const
Ipp32s total_zeros_map_2[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

5, /* 3-bit codes */
0x0003, 4, 0x0004, 3, 0x0005, 2, 0x0006, 1,
0x0007, 0,

4, /* 4-bit codes */
0x0002, 8, 0x0003, 7, 0x0004, 6, 0x0005, 5,

2, /* 5-bit codes */
0x0002, 10, 0x0003, 9,

4, /* 6-bit codes */
0x0000, 14, 0x0001, 13, 0x0002, 12, 0x0003, 11,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 3

/*
7    011
6    100
3    101
2    110
1    111

8    0010
5    0011
4    0100
0    0101

12    0000 1
10    0001 0
9    0001 1

13    0000 00
11    0000 01
*/

const
Ipp32s total_zeros_map_3[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

5, /* 3-bit codes */
0x0003, 7, 0x0004, 6, 0x0005, 3, 0x0006, 2,
0x0007, 1,

4, /* 4-bit codes */
0x0002, 8, 0x0003, 5, 0x0004, 4, 0x0005, 0,

3, /* 5-bit codes */
0x0001, 12, 0x0002, 10, 0x0003, 9,

2, /* 6-bit codes */
0x0000, 13, 0x0001, 11,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 4
/*
8  011
6  100
5  101
4  110
1  111

9  0010
7  0011
3  0100
2  0101

12 0000 0
11 0000 1
10 0001 0
0  0001 1
*/

const
Ipp32s total_zeros_map_4[] =
{
5, /* max bits */
1,  /* total subtables */
5,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

5, /* 3-bit codes */
0x0003, 8, 0x0004, 6, 0x0005, 5, 0x0006, 4,
0x0007, 1,

4, /* 4-bit codes */
0x0002, 9, 0x0003, 7, 0x0004, 3, 0x0005, 2,

4, /* 5-bit codes */
0x0000, 12, 0x0001, 11, 0x0002, 10, 0x0003, 0,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 5
/*
7    011
6    100
5    101
4    110
3    111

10    0001
8    0010
2    0011
1    0100
0    0101

11    0000 0
9    0000 1
*/

const
Ipp32s total_zeros_map_5[] =
{
5, /* max bits */
1,  /* total subtables */
5,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

5, /* 3-bit codes */
0x0003, 7, 0x0004, 6, 0x0005, 5, 0x0006, 4,
0x0007, 3,

5, /* 4-bit codes */
0x0001, 10, 0x0002, 8, 0x0003, 2, 0x0004, 1,
0x0005, 0,

2, /* 5-bit codes */
0x0000, 11, 0x0001, 9,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 6
/*
9    001
7    010
6    011
5    100
4    101
3    110
2    111

8    0001

1    0000 1

10    0000 00
0    0000 01
*/

const
Ipp32s total_zeros_map_6[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */
0, /* 2-bit codes */

7, /* 3-bit codes */
0x0001, 9, 0x0002, 7, 0x0003, 6, 0x0004, 5,
0x0005, 4, 0x0006, 3, 0x0007, 2,

1, /* 4-bit codes */
0x0001, 8,

1, /* 5-bit codes */
0x0001, 1,

2, /* 6-bit codes */
0x0000, 10, 0x0001, 0,

-1
};

//Table 9 7 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 7
/*
5    11

8    001
6    010
4    011
3    100
2    101

7    0001

1    0000 1

9    0000 00
0    0000 01

*/

const
Ipp32s total_zeros_map_7[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */

1, /* 2-bit codes */
0x0003, 5,

5, /* 3-bit codes */
0x0001, 8, 0x0002, 6, 0x0003, 4, 0x0004, 3,
0x0005, 2,

1, /* 4-bit codes */
0x0001, 7,

1, /* 5-bit codes */
0x0001, 1,

2, /* 6-bit codes */
0x0000, 9, 0x0001, 0,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 8
/*
5    10
4    11

7    001
6    010
3    011

1    0001

2    0000 1

8    0000 00
0    0000 01

*/

const
Ipp32s total_zeros_map_8[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */

2, /* 2-bit codes */
0x0002, 5,0x0003, 4,

3, /* 3-bit codes */
0x0001, 7, 0x0002, 6, 0x0003, 3,

1, /* 4-bit codes */
0x0001, 1,

1, /* 5-bit codes */
0x0001, 2,

2, /* 6-bit codes */
0x0000, 8, 0x0001, 0,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 9
/*
6    01
4    10
3    11

5    001

2    0001

7    0000 1

1    0000 00
0    0000 01
*/

const
Ipp32s total_zeros_map_9[] =
{
6, /* max bits */
1,  /* total subtables */
6,/* subtable sizes */

0, /* 1-bit codes */

3, /* 2-bit codes */
0x0001, 6, 0x0002, 4, 0x0003, 3,

1, /* 3-bit codes */
0x0001, 5,

1, /* 4-bit codes */
0x0001, 2,

1, /* 5-bit codes */
0x0001, 7,

2, /* 6-bit codes */
0x0000, 1, 0x0001, 0,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 10
/*
5    01
4    10
3    11

2    001

6    0001

1    0000 0
0    0000 1
*/

const
Ipp32s total_zeros_map_10[] =
{
5, /* max bits */
1,  /* total subtables */
5,/* subtable sizes */

0, /* 1-bit codes */

3, /* 2-bit codes */
0x0001, 5, 0x0002, 4, 0x0003, 3,

1, /* 3-bit codes */
0x0001, 2,

1, /* 4-bit codes */
0x0001, 6,

2, /* 5-bit codes */
0x0000, 1, 0x0001, 0,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 11
/*

4    1

2    001
3    010
5    011

0    0000
1    0001
*/

const
Ipp32s total_zeros_map_11[] =
{
4, /* max bits */
1,  /* total subtables */
4,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 4,

0, /* 2-bit codes */

3, /* 3-bit codes */
0x0001, 2, 0x0002, 3, 0x0003, 5,

2, /* 4-bit codes */
0x0000, 0, 0x0001, 1,


-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 12
/*
3    1

2    01

4    001

0    0000
1    0001
*/

const
Ipp32s total_zeros_map_12[] =
{
4, /* max bits */
1,  /* total subtables */
4,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 3,

1, /* 2-bit codes */
0x0001, 2,

1, /* 3-bit codes */
0x0001, 4,

2, /* 4-bit codes */
0x0000, 0, 0x0001, 1,


-1
};


//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 13
/*
2    1

3    01

0    000
1    001

*/

const
Ipp32s total_zeros_map_13[] =
{
3, /* max bits */
1,  /* total subtables */
3,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 2,

1, /* 2-bit codes */
0x0001, 3,

2, /* 3-bit codes */
0x0000, 0, 0x0001, 1,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 14
/*
2    1

0    00
1    01

*/

const
Ipp32s total_zeros_map_14[] =
{
2, /* max bits */
1,  /* total subtables */
2,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 2,

2, /* 2-bit codes */
0x0000, 0, 0x0001, 1,

-1
};

//Table 9-8 - total_zeros tables for 4x4 blocks with
//TotalCoeff( coeff_token ) == 15
/*
0    0
1    1

*/

const
Ipp32s total_zeros_map_15[] =
{
1, /* max bits */
1,  /* total subtables */
1,/* subtable sizes */

2, /* 1-bit codes */
0x0000, 0, 0x0001, 1,

-1
};

//Table 9-9 - total_zeros tables for chroma DC 2x2 blocks
//TotalCoeff( coeff_token ) == 1
/*
0    1
1    01
2    001
3    000
*/

const
Ipp32s total_zeros_map_cr1[] =
{
3, /* max bits */
1, /* total subtables */
3,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 0,

1, /* 2-bit codes */
0x0001, 1,

2, /* 3-bit codes */
0x0000, 3, 0x0001, 2,

-1
};

//Table 9-9 - total_zeros tables for chroma DC 2x2 blocks
//TotalCoeff( coeff_token ) == 2
/*
0    1
1    01
2    00
*/

const
Ipp32s total_zeros_map_cr2[] =
{
2, /* max bits */
1, /* total subtables */
2,/* subtable sizes */

1, /* 1-bit codes */
0x0001, 0,

2, /* 2-bit codes */
0x0000, 2, 0x0001, 1,

-1
};

//Table 9-9 - total_zeros tables for chroma DC 2x2 blocks
//TotalCoeff( coeff_token ) == 3
/*
0    1
1    0
*/

const
Ipp32s total_zeros_map_cr3[] =
{
1, /* max bits */
1, /* total subtables */
1,/* subtable sizes */

2, /* 1-bit codes */
0x0001, 0, 0x0000, 1,

-1
};

const
Ipp32s total_zeros_map_cr422_1[] =
{
    5, /* max bits */
    1, /* total subtables */
    5,/* subtable sizes */

    1, /* 1-bit codes */
    0x0001, 0,

    0, /* 2-bit codes */
    2, /* 3-bit codes */
    0x0002, 1,0x0003, 2,
    3, /* 4-bit codes */
    0x0001, 5,
    0x0002, 3,0x0003, 4,
    2, /* 5-bit codes */
    0x0000, 7,0x0001, 6,

    -1
};

const
Ipp32s total_zeros_map_cr422_2[] =
{
    3, /* max bits */
    1, /* total subtables */
    3,/* subtable sizes */

    0, /* 1-bit codes */

    1, /* 2-bit codes */
    0x0001, 1,
    6, /* 3-bit codes */
    0x0000, 0,0x0001, 2,
    0x0004, 3,0x0005, 4,
    0x0006, 5,0x0007, 6,

    -1
};

const
Ipp32s total_zeros_map_cr422_3[] =
{
    3, /* max bits */
    1, /* total subtables */
    3,/* subtable sizes */

    0, /* 1-bit codes */

    2, /* 2-bit codes */
    0x0001, 2,0x0002, 3,
    4, /* 3-bit codes */
    0x0000, 0,0x0001, 1,
    0x0006, 4,0x0007, 5,

    -1
};

const
Ipp32s total_zeros_map_cr422_4[] =
{
    3, /* max bits */
    1, /* total subtables */
    3,/* subtable sizes */

    0, /* 1-bit codes */

    3, /* 2-bit codes */
    0x0000, 1,0x0001, 2,
    0x0002, 3,
    2, /* 3-bit codes */
    0x0006, 0,0x0007, 4,

    -1
};

const
Ipp32s total_zeros_map_cr422_5[] =
{
    2, /* max bits */
    1, /* total subtables */
    2,/* subtable sizes */

    0, /* 1-bit codes */

    4, /* 2-bit codes */
    0x0000, 0,0x0001, 1,
    0x0002, 2,0x0003, 3,


    -1
};

const
Ipp32s total_zeros_map_cr422_6[] =
{
    2, /* max bits */
    1, /* total subtables */
    2,/* subtable sizes */

    1, /* 1-bit codes */
    0x0001, 2,

    2, /* 2-bit codes */
    0x0000, 0, 0x0001, 1,

    -1
};

const
Ipp32s total_zeros_map_cr422_7[] =
{
    1, /* max bits */
    1, /* total subtables */
    1,/* subtable sizes */

    2, /* 1-bit codes */
    0x0000, 0, 0x0001, 1,

    -1
};

#endif

const Ipp32s vlcTblCoeffToken_0[] = {
    3, 2432, 131584, 65793, 65793, 2, 2, 2,
    2, 3, 9344, 7040, 4736, 262912, 131328, 65536,
    197377, 197377, 3, 328450, 328450, 328450, 328450, 197122,
    197122, 197122, 197122, 3, 393985, 393985, 262657, 262657,
    196865, 196865, 131073, 131073, 3, 110720, 77696, 11648,
    44672, 459520, 328192, 262400, 196608, 7, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 525062, 525062,
    525062, 525062, 525062, 525062, 525062, 525062, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 7, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 327942,
    327942, 327942, 327942, 327942, 327942, 327942, 327942, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 7,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    393477, 393477, 393477, 393477, 393477, 393477, 393477, 393477,
    393477, 393477, 393477, 393477, 393477, 393477, 393477, 393477,
    393477, 393477, 393477, 393477, 393477, 393477, 393477, 393477,
    393477, 393477, 393477, 393477, 393477, 393477, 393477, 393477,
    327685, 327685, 327685, 327685, 327685, 327685, 327685, 327685,
    327685, 327685, 327685, 327685, 327685, 327685, 327685, 327685,
    327685, 327685, 327685, 327685, 327685, 327685, 327685, 327685,
    327685, 327685, 327685, 327685, 327685, 327685, 327685, 327685,
    7, 15790337, 15790337, 852225, 852225, 1048576, 1049088, 1048832,
    983040, 1049344, 983552, 983296, 917504, 983808, 918016, 917760,
    851968, 918273, 918273, 852481, 852481, 786689, 786689, 786433,
    786433, 852737, 852737, 786945, 786945, 721153, 721153, 720897,
    720897, 787202, 787202, 787202, 787202, 721410, 721410, 721410,
    721410, 655618, 655618, 655618, 655618, 655362, 655362, 655362,
    655362, 721666, 721666, 721666, 721666, 655874, 655874, 655874,
    655874, 590082, 590082, 590082, 590082, 589826, 589826, 589826,
    589826, 524291, 524291, 524291, 524291, 524291, 524291, 524291,
    524291, 590339, 590339, 590339, 590339, 590339, 590339, 590339,
    590339, 524547, 524547, 524547, 524547, 524547, 524547, 524547,
    524547, 458755, 458755, 458755, 458755, 458755, 458755, 458755,
    458755, 656131, 656131, 656131, 656131, 656131, 656131, 656131,
    656131, 524803, 524803, 524803, 524803, 524803, 524803, 524803,
    524803, 459011, 459011, 459011, 459011, 459011, 459011, 459011,
    459011, 393219, 393219, 393219, 393219, 393219, 393219, 393219,
    393219
};

const Ipp32s vlcTblCoeffToken_1[] = {
    3, 11136, 6784, 2432, 131584, 65793, 65793, 1,
    1, 4, 262915, 262915, 262915, 262915, 262915, 262915,
    262915, 262915, 197379, 197379, 197379, 197379, 197379, 197379,
    197379, 197379, 4, 393985, 393985, 197121, 197121, 196865,
    196865, 65537, 65537, 328450, 328450, 328450, 328450, 131330,
    131330, 131330, 131330, 4, 114560, 81536, 15488, 48512,
    525056, 328192, 327936, 196608, 459521, 459521, 262657, 262657,
    262401, 262401, 131073, 131073, 7, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 327686, 327686, 327686,
    327686, 327686, 327686, 327686, 327686, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 393734, 393734, 393734,
    393734, 393734, 393734, 393734, 393734, 7, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 393478, 393478,
    393478, 393478, 393478, 393478, 393478, 393478, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 262150, 262150,
    262150, 262150, 262150, 262150, 262150, 262150, 7, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 590597,
    590597, 590597, 590597, 590597, 590597, 590597, 590597, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459269,
    459269, 459269, 459269, 459269, 459269, 459269, 459269, 459013,
    459013, 459013, 459013, 459013, 459013, 459013, 459013, 459013,
    459013, 459013, 459013, 459013, 459013, 459013, 459013, 459013,
    459013, 459013, 459013, 459013, 459013, 459013, 459013, 459013,
    459013, 459013, 459013, 459013, 459013, 459013, 459013, 393221,
    393221, 393221, 393221, 393221, 393221, 393221, 393221, 393221,
    393221, 393221, 393221, 393221, 393221, 393221, 393221, 393221,
    393221, 393221, 393221, 393221, 393221, 393221, 393221, 393221,
    393221, 393221, 393221, 393221, 393221, 393221, 393221, 7,
    15790337, 15790337, 983809, 983809, 1049344, 1049088, 1048832, 1048576,
    983296, 983040, 983552, 917760, 918017, 918017, 917505, 917505,
    918273, 918273, 852481, 852481, 852225, 852225, 851969, 851969,
    852737, 852737, 786945, 786945, 786689, 786689, 786433, 786433,
    720898, 720898, 720898, 720898, 721410, 721410, 721410, 721410,
    721154, 721154, 721154, 721154, 655362, 655362, 655362, 655362,
    787202, 787202, 787202, 787202, 655874, 655874, 655874, 655874,
    655618, 655618, 655618, 655618, 589826, 589826, 589826, 589826,
    721667, 721667, 721667, 721667, 721667, 721667, 721667, 721667,
    590339, 590339, 590339, 590339, 590339, 590339, 590339, 590339,
    590083, 590083, 590083, 590083, 590083, 590083, 590083, 590083,
    524291, 524291, 524291, 524291, 524291, 524291, 524291, 524291,
    656131, 656131, 656131, 656131, 656131, 656131, 656131, 656131,
    524803, 524803, 524803, 524803, 524803, 524803, 524803, 524803,
    524547, 524547, 524547, 524547, 524547, 524547, 524547, 524547,
    458755, 458755, 458755, 458755, 458755, 458755, 458755, 458755
};

const Ipp32s vlcTblCoeffToken_2[] = {
    4, 20608, 18304, 13696, 16000, 4480, 6784, 9088,
    11392, 459520, 393984, 328448, 262912, 197376, 131584, 65792,
    0, 3, 327938, 327938, 327938, 327938, 328194, 328194,
    328194, 328194, 3, 262402, 262402, 262402, 262402, 262658,
    262658, 262658, 262658, 3, 196866, 196866, 196866, 196866,
    525058, 525058, 525058, 525058, 3, 197122, 197122, 197122,
    197122, 131330, 131330, 131330, 131330, 3, 196609, 196609,
    459265, 459265, 459009, 459009, 131073, 131073, 3, 590593,
    590593, 393729, 393729, 393473, 393473, 65537, 65537, 3,
    458752, 393216, 590336, 327680, 656128, 524800, 524544, 262144,
    3, 39040, 32128, 34432, 36736, 22912, 25216, 27520,
    29824, 3, 787202, 787202, 787202, 787202, 721410, 721410,
    721410, 721410, 3, 655618, 655618, 655618, 655618, 589826,
    589826, 589826, 589826, 3, 721666, 721666, 721666, 721666,
    655874, 655874, 655874, 655874, 3, 590082, 590082, 590082,
    590082, 524290, 524290, 524290, 524290, 3, 983296, 917504,
    918272, 918016, 917760, 851968, 852225, 852225, 3, 786433,
    786433, 852481, 852481, 786689, 786689, 720897, 720897, 3,
    852737, 852737, 786945, 786945, 721153, 721153, 655361, 655361,
    3, 15790337, 1048576, 1049344, 1049088, 1048832, 983040, 983808,
    983552
};

const Ipp32s vlcTblCoeffToken_3[] = {
    6, 16768, 18048, 262144, 196608, 131072, 197376, 131328,
    65536, 131587, 131587, 131587, 131587, 131587, 131587, 131587,
    131587, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 2, 262913, 262913, 262656, 262400, 2, 197121,
    197121, 196865, 196865
};

const Ipp32s vlcTblCoeffToken_4[] = {
    7, 49792, 33152, 262913, 262913, 197378, 197378, 197378,
    197378, 393984, 328448, 262656, 197120, 196864, 131328, 131072,
    65536, 131588, 131588, 131588, 131588, 131588, 131588, 131588,
    131588, 131588, 131588, 131588, 131588, 131588, 131588, 131588,
    131588, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 65797, 65797, 65797, 65797, 65797, 65797, 65797,
    65797, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 328196, 328196, 328196, 328196, 328196, 328196,
    328196, 328196, 328196, 328196, 328196, 328196, 328196, 328196,
    328196, 328196, 262404, 262404, 262404, 262404, 262404, 262404,
    262404, 262404, 262404, 262404, 262404, 262404, 262404, 262404,
    262404, 262404, 262148, 262148, 262148, 262148, 262148, 262148,
    262148, 262148, 262148, 262148, 262148, 262148, 262148, 262148,
    262148, 262148, 196612, 196612, 196612, 196612, 196612, 196612,
    196612, 196612, 196612, 196612, 196612, 196612, 196612, 196612,
    196612, 196612, 6, 15790337, 15790337, 15790337, 15790337, 15790337,
    15790337, 15790337, 524288, 524801, 524801, 524545, 524545, 459009,
    459009, 458753, 458753, 525058, 525058, 525058, 525058, 459266,
    459266, 459266, 459266, 393474, 393474, 393474, 393474, 393218,
    393218, 393218, 393218, 459523, 459523, 459523, 459523, 459523,
    459523, 459523, 459523, 393731, 393731, 393731, 393731, 393731,
    393731, 393731, 393731, 327939, 327939, 327939, 327939, 327939,
    327939, 327939, 327939, 327683, 327683, 327683, 327683, 327683, 327683, 327683, 327683
};

const Ipp32s vlcTblRunBefore_1[] = { 1, 256, 0 };
const Ipp32s vlcTblRunBefore_2[] = { 2, 512, 256, 1, 1 };
const Ipp32s vlcTblRunBefore_3[] = { 2, 768, 512, 256, 0 };
const Ipp32s vlcTblRunBefore_4[] = { 3, 1024, 768, 513, 513, 257, 257, 1, 1 };
const Ipp32s vlcTblRunBefore_5[] = { 3, 1280, 1024, 768, 512, 257, 257, 1, 1 };
const Ipp32s vlcTblRunBefore_6[] = { 3, 256, 512, 1024, 768, 1536, 1280, 1, 1 };

const Ipp32s vlcTblRunBefore_7[] = {
    11, 15790337, 3584, 3329, 3329, 3074, 3074, 3074, 3074, 2819, 2819, 2819, 2819, 2819, 2819, 2819,
    2819, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564, 2564,
    2564, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309,
    2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309, 2309,
    2309, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
    2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
    2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
    2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
    2054, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
    1799, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
    1544, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
    1288, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
    1032, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
    776, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
    520, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
    264, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
};

const Ipp32s vlcTblTotalZeros_1[] = {
    9, 15790337, 3840, 3584, 3328, 3073, 3073, 2817, 2817, 2562, 2562, 2562, 2562, 2306, 2306, 2306,
    2306, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
    1795, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
    1540, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284,
    1284, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029,
    1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029,
    1029, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
    773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
    773, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
    518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
    518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
    518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
    518, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
    262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
    262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
    262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
    262, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
};

const Ipp32s vlcTblTotalZeros_2[] = {
    6, 3584, 3328, 3072, 2816, 2561, 2561, 2305, 2305, 2050, 2050, 2050, 2050, 1794, 1794, 1794,
    1794, 1538, 1538, 1538, 1538, 1282, 1282, 1282, 1282, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
    1027, 771, 771, 771, 771, 771, 771, 771, 771, 515, 515, 515, 515, 515, 515, 515,
    515, 259, 259, 259, 259, 259, 259, 259, 259, 3, 3, 3, 3, 3, 3, 3, 3
};

const Ipp32s vlcTblTotalZeros_3[] = {
    6, 3328, 2816, 3073, 3073, 2561, 2561, 2305, 2305, 2050, 2050, 2050, 2050, 1282, 1282, 1282,
    1282, 1026, 1026, 1026, 1026, 2, 2, 2, 2, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
    1795, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 771, 771, 771, 771, 771, 771, 771,
    771, 515, 515, 515, 515, 515, 515, 515, 515, 259, 259, 259, 259, 259, 259, 259, 259
};

const Ipp32s vlcTblTotalZeros_4[] = {
    5, 3072, 2816, 2560, 0, 2305, 2305, 1793, 1793, 769, 769, 513, 513, 2050, 2050, 2050,
    2050, 1538, 1538, 1538, 1538, 1282, 1282, 1282, 1282, 1026, 1026, 1026, 1026, 258, 258, 258, 258
};

const Ipp32s vlcTblTotalZeros_5[] = {
    5, 2816, 2304, 2561, 2561, 2049, 2049, 513, 513, 257, 257, 1, 1, 1794, 1794, 1794,
    1794, 1538, 1538, 1538, 1538, 1282, 1282, 1282, 1282, 1026, 1026, 1026, 1026, 770, 770, 770, 770
};

const Ipp32s vlcTblTotalZeros_6[] = {
    6, 2560, 0, 257, 257, 2050, 2050, 2050, 2050, 2307, 2307, 2307, 2307, 2307, 2307, 2307,
    2307, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1539, 1539, 1539, 1539, 1539, 1539, 1539,
    1539, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
    1027, 771, 771, 771, 771, 771, 771, 771, 771, 515, 515, 515, 515, 515, 515, 515, 515
};

const Ipp32s vlcTblTotalZeros_7[] = {
    6, 2304, 0, 257, 257, 1794, 1794, 1794, 1794, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
    2051, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
    1027, 771, 771, 771, 771, 771, 771, 771, 771, 515, 515, 515, 515, 515, 515, 515,
    515, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284
};

const Ipp32s vlcTblTotalZeros_8[] = {
    6, 2048, 0, 513, 513, 258, 258, 258, 258, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
    1795, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 771, 771, 771, 771, 771, 771, 771,
    771, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284, 1284,
    1284, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028
};

const Ipp32s vlcTblTotalZeros_9[] = {
    6, 256, 0, 1793, 1793, 514, 514, 514, 514, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
    1283, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
    1540, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
    1028, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772, 772
};

const Ipp32s vlcTblTotalZeros_10[] = {
    5, 256, 0, 1537, 1537, 514, 514, 514, 514, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
    1283, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 771, 771, 771, 771, 771, 771, 771, 771
};

const Ipp32s vlcTblTotalZeros_11[] = { 4, 0, 256, 513, 513, 769, 769, 1281, 1281, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027 };
const Ipp32s vlcTblTotalZeros_12[] = { 4, 0, 256, 1025, 1025, 514, 514, 514, 514, 771, 771, 771, 771, 771, 771, 771, 771 };
const Ipp32s vlcTblTotalZeros_13[] = { 3, 0, 256, 769, 769, 514, 514, 514, 514 };
const Ipp32s vlcTblTotalZeros_14[] = { 2, 0, 256, 513, 513 };
const Ipp32s vlcTblTotalZeros_15[] = { 1, 0, 256 };

const Ipp32s vlcTblTotalZerosCR_1[] = { 3, 768, 512, 257, 257, 2, 2, 2, 2 };
const Ipp32s vlcTblTotalZerosCR_2[] = { 2, 512, 256, 1, 1 };
const Ipp32s vlcTblTotalZerosCR_3[] = { 1, 256, 0 };

const Ipp32s vlcTblTotalZerosCR422_1[] = { 5, 1792, 1536, 1281, 1281, 769, 769, 1025, 1025, 258, 258, 258, 258, 514, 514, 514, 514, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 };
const Ipp32s vlcTblTotalZerosCR422_2[] = { 3, 0, 512, 257, 257, 768, 1024, 1280, 1536 };
const Ipp32s vlcTblTotalZerosCR422_3[] = { 3, 0, 256, 513, 513, 769, 769, 1024, 1280 };
const Ipp32s vlcTblTotalZerosCR422_4[] = { 3, 257, 257, 513, 513, 769, 769, 0, 1024 };
const Ipp32s vlcTblTotalZerosCR422_5[] = { 2, 0, 256, 512, 768 };
const Ipp32s vlcTblTotalZerosCR422_6[] = { 2, 0, 256, 513, 513 };
const Ipp32s vlcTblTotalZerosCR422_7[] = { 1, 0, 256 };

const IppVCHuffmanSpec_32s *vlcTblCoeffToken[5] = {
    vlcTblCoeffToken_0,
    vlcTblCoeffToken_1,
    vlcTblCoeffToken_2,
    vlcTblCoeffToken_3,
    vlcTblCoeffToken_4
};

const IppVCHuffmanSpec_32s *vlcTblRunBefore[16] = {
    NULL,
    vlcTblRunBefore_1,
    vlcTblRunBefore_2,
    vlcTblRunBefore_3,
    vlcTblRunBefore_4,
    vlcTblRunBefore_5,
    vlcTblRunBefore_6,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7,
    vlcTblRunBefore_7
};

const IppVCHuffmanSpec_32s *vlcTblTotalZeros[16] = {
    NULL,
    vlcTblTotalZeros_1,
    vlcTblTotalZeros_2,
    vlcTblTotalZeros_3,
    vlcTblTotalZeros_4,
    vlcTblTotalZeros_5,
    vlcTblTotalZeros_6,
    vlcTblTotalZeros_7,
    vlcTblTotalZeros_8,
    vlcTblTotalZeros_9,
    vlcTblTotalZeros_10,
    vlcTblTotalZeros_11,
    vlcTblTotalZeros_12,
    vlcTblTotalZeros_13,
    vlcTblTotalZeros_14,
    vlcTblTotalZeros_15
};

const IppVCHuffmanSpec_32s *vlcTblTotalZerosCR[4] = {
    NULL,
    vlcTblTotalZerosCR_1,
    vlcTblTotalZerosCR_2,
    vlcTblTotalZerosCR_3
};

const IppVCHuffmanSpec_32s *vlcTblTotalZerosCR422[8] = {
    NULL,
    vlcTblTotalZerosCR422_1,
    vlcTblTotalZerosCR422_2,
    vlcTblTotalZerosCR422_3,
    vlcTblTotalZerosCR422_4,
    vlcTblTotalZerosCR422_5,
    vlcTblTotalZerosCR422_6,
    vlcTblTotalZerosCR422_7
};

}

#endif
